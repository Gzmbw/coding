1.析构函数：对象临终的遗言。析构函数在对象销毁时会被自动调用，完成的任务就是归还系统的资源。

2.析构函数
2.1定义格式： ～类名()//是空括号，不加任何参数
class Student
{
public:
   Student(){cout<<"Student"<<endl;}//构造函数
   ~Student(){cout<<"Student"<<endl;}//注意前面小括号是不加任何参数的。
private:
   string m_strName;
};
思考：析构函数有存在的必要性吗？看下面例子
class Student
{
public:
  Student(){m_pName=new char[20];}//使用指针指向堆中分配的一段内存
  ~Student(){delete []m_pName;}//不能定义参数，不能进行重载
private:
  char *m_pName;//这里定义指针变量
};
//设计一个在对象销毁之前被自动调用的函数就非常有必要了，那这个函数就是析构函数。

3.析构函数特点
3.1如果没有自定义的析构函数则系统自动生成；
3.2析构函数在对象销毁时自动调用；
3.3析构函数没有返回值，没有参数也不能重载；

4.对象的生命历程
申请内存--->初始化列表--->构造函数
                             |
释放内存<----析构函数<-----参与运算






