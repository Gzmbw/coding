-------《标准模板库》------
>>>>>>STL :标准模板库，Standard Template Lib
1.vector 向量
   本质:对数组的封装；
   特点：读取能在常数时间完成；
1.1初始化vector对象的方式
vector<T> v1;      vector保存类型为T的对象。默认构造函数v1为空；
vector<T> v2(v1);  v2是v1的一个副本；
vector<T> v3(n,i); v3包含n个值为i的元素；
vector<T> v4(n);   v4包含有值初始化元素的n个副本；

1.2具体在使用
vector<int> ivec1;
vector<int> ivec2(ivec1);

vector<string> svec1;
vector<string> svec2(ivec);

vector<int> ivec4(10,-1);//用10个-1这样的元素，初始化了ivec4
vector<string> svec(10,"hi!");//用10个这样的字符串，初始化了svec

1.3 vector 常用函数
empty()              判断向量是否为空
begin()              返回向量迭代器首元素
end()                返回向量迭代器末元素的下一个元素
clear()              清空向量
front()              第一个数据
back()               最后一个数据
size()               获得向量中数据大小
push_back(elem)      将数据插入向量尾
pop_back()           删除向量尾部数据
.....                   .......

2.实际使用是的形式
int main()
{
    vector<int> vec;
    vec.push_back(10);
    vec.push_pop();//会将10删掉
    cout<<vec.size()<<endl;
    return 0;
}
//遍历数组
for(int k=0;k<vec.size();k++)
{
    cout<<vec[k]<<endl;
}
//还有一种遍历数组的方法，迭代器：iterator
int main()
{
    vector vec;
    vec.push_back("hello");
    vector<string>::iterator citer=vec.begin();//citer是迭代器变量名
    for(;citer!=vec.end();citer++)
    {   cout<<*citer<<endl;}
    return 0;
}


3. 链表：list
    特点：数据插入速度快；

4.映射：map
             Key                       Value
             x1  <---------------------> y1
    键       x2  <---------------------> y2             值
             x3  <---------------------> y3
*储存的数据是成对出现的；
//具体使用方法
map<int,string> m;
pair<int,string> p1(10,"shanghai");
pair<int,string> p2(20,"beijing");
m.insert(p1);//通过insert放到m当中去
m.insert(p2);
cout<<m[10]<<endl;
cout<<m[20]<<endl;
//另一个例子
map<string,string> m;
pair<string,string> p1("S","shanghai");
pair<string,string> p2("B","beijing");
m.insert(p1);
m.insert(p2);
cout<<m["S"]<<endl;
cout<<m["B"]<<endl;
